name: Package Build and Publish to NuGet
permissions:
  contents: write
  pages: write
  id-token: write
env:
  PACKAGE_VERSION: 3.0.0
on:
  push:
    branches:
      - alpha
jobs:
  build-CsProj:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET 7
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0"
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -c Release
      - name: Pack Project DLL
        run: |
          BASE_VERSION=$(xmlstarlet sel -t -v "/Project/PropertyGroup/Version" Directory.Build.props)
          LATEST_TAG=$(git tag -l "${BASE_VERSION}-Alpha.*" | sort -V | tail -n 1)
          if [ -z "$LATEST_TAG" ]; then
              PACKAGE_VERSION="${BASE_VERSION}-Alpha.1"
          else
              CURRENT_ALPHA=$(echo "$LATEST_TAG" | sed -E 's/.*Alpha\.([0-9]+)$/\1/')
              NEXT_ALPHA=$((CURRENT_ALPHA + 1))
              PACKAGE_VERSION=v"${BASE_VERSION}-Alpha.${NEXT_ALPHA}"
          fi
          dotnet pack -c Release -o nupkgs -p:Version=${PACKAGE_VERSION}
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nupkgs
          path: nupkgs/*
  publish-nuget:
    needs: build-CsProj
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: nupkgs
          path: nupkgs
      - name: Publish to NuGet
        run: dotnet nuget push "nupkgs/*" --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json
  tag-version:
    needs: publish-nuget
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install xmlstarlet
        run: sudo apt-get install -y xmlstarlet
      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${{ env.PACKAGE_VERSION }}
          git push --tags