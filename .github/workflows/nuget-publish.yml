name: .NET 7 Build and Publish to NuGet

permissions:
  contents: read
  pages: write
  id-token: write

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET 7
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0"
      - name: Restore dependencies
        run: dotnet restore
      - name: Install dotnet-gitversion
        run: dotnet tool install -g GitVersion.Tool
      - name: Increment Minor Version
        run: |
          VERSION=$(dotnet-gitversion /showvariable Patch)
          echo "Current VERSION: $VERSION"
          NEW_VERSION=$((VERSION + 1))
          echo "New VERSION: $NEW_VERSION"
          sed -i "s/<Version>.*<\/Version>/<Version>0.0.$NEW_VERSION<\/Version>/" Directory.Build.props
      - name: Git Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Incremented version to 0.0.$NEW_VERSION"
          git push
      - name: Build
        run: dotnet build --no-restore -c Release
      - name: Pack Excel Project
        run: dotnet pack ./Excel/Excel.csproj --no-build -c Release -o nupkgs
      - name: Pack Document Project
        run: dotnet pack ./Document/Document.csproj --no-build -c Release -o nupkgs
      - name: Pack Presentation Project
        run: dotnet pack ./Presentation/Presentation.csproj --no-build -c Release -o nupkgs
      - name: Extract Version from Directory.Build.props
        id: get_version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" Directory.Build.props)
          echo "Version: $VERSION"
          echo "::set-output name=version::$VERSION"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nupkgs
          path: nupkgs/*.nupkg

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: nupkgs
          path: nupkgs
      - name: Publish to NuGet
        run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.build.outputs.version }}
          release_name: Release ${{ needs.build.outputs.version }}
          draft: false
          prerelease: false
          body: "Auto Release By Actions"
